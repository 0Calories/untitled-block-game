generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  username   String     @unique
  email      String     @unique
  password   String
  created_at DateTime?  @default(now())
  comments   Comment[]
  character  Character?
}

model Character {
  user        User      @relation(fields: [id], references: [id])
  id          Int       @id
  name        String    @default("Character")
  colour      String    @default("#FFFFFF")
  bobux       Int       @default(0)
  bio         String?
  homeWorldId Int       @default(0)
  worlds      World[]
  visitors    Visitor[]
}

model World {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  visits      Int       @default(0)
  likes       Int       @default(0)
  dislikes    Int       @default(0)
  creator     Character @relation(fields: [creatorId], references: [id])
  creatorId   Int
  created_at  DateTime? @default(now())
  updated_at  DateTime? @default(now())
  comments    Comment[]
  visitors    Visitor[]
}

model Comment {
  id         Int       @id @default(autoincrement())
  text       String
  userId     Int
  worldId    Int
  created_at DateTime? @default(now())
  user       User      @relation(fields: [userId], references: [id])
  world      World     @relation(fields: [worldId], references: [id])
}

// Relational table for world visitors
model Visitor {
  visitor   Character @relation(fields: [visitorId], references: [id])
  world     World     @relation(fields: [worldId], references: [id])
  visitorId Int
  worldId   Int
  visitDate DateTime  @default(now())

  @@id([visitorId, worldId])
}
